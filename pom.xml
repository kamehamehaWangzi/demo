<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.2.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.wode</groupId>
	<artifactId>demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>demo</name>
	<description>Demo project for Spring Boot</description>
	<packaging>war</packaging>

	<properties>
		<java.version>1.8</java.version>
		<json.version>1.2.7</json.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<version>7.0.59</version>
		</dependency>

		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>${json.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>

	</dependencies>

	<build>
		<defaultGoal>compile</defaultGoal>
		<finalName>demo</finalName>
		<directory>${basedir}/target</directory>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
					<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.13</version>
				<executions>
					<execution>
						<id>build-image</id>     <!--定义一个执行命令的id-->
						<phase>package</phase>   <!--绑定mvn的哪个命令-->
						<goals>
							<goal>build</goal>   <!--要执行的命令 -->
						</goals>
					</execution>
					<execution>
						<id>image-tag</id>
						<phase>package</phase>
						<goals>
							<goal>tag</goal>      <!--tag命令，相当于docker的tag命令-->
						</goals>
						<configuration>
							<image>demo:v3</image>   <!--镜像名-->
							<newName>192.168.15.3:5000/demo:v3</newName>   <!--打的标签名-->
						</configuration>
					</execution>
					<execution>
						<id>package-push</id>
						<phase>package</phase>
						<goals>
							<goal>push</goal>    <!--相当于docker的push命令-->
						</goals>
						<configuration>
							<imageName>192.168.15.3:5000/demo:v3</imageName>  <!--要push的镜像名-->
						</configuration>
					</execution>
				</executions>
				<configuration>
					<serverId>demo</serverId>
					<forceTags>true</forceTags>    <!--覆盖相同标签镜像-->
					<imageName>demo:v3</imageName>  <!--指定镜像名称 仓库/镜像名:标签-->  <!-- 注意imageName一定要是符合正则[a-z0-9-_.]的，否则构建不会成功 -->
					<dockerHost>http://192.168.15.3:2375</dockerHost>  <!-- docker服务位置 -->
					<dockerDirectory>target/docker</dockerDirectory>
					<resources>
						<resource>                                             <!-- 指定资源文件 -->
							<targetPath>/</targetPath>                         <!-- 指定要复制的目录路径，这里是当前目录 -->
							<directory>${project.build.directory}</directory>  <!-- 指定要复制的根目录，这里是target目录, 缺省也为target目录 -->
							<include>${project.build.finalName}.war</include>  <!-- 指定需要拷贝的文件，这里指最后生成的jar包 -->
						</resource>
					</resources>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
